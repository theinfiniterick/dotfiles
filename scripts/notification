#!/bin/sh

NOTIFY_USER=user
DISPLAY=:0
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus

NOTIFY_BAR_CHAR=‚îÅ
NOTIFY_BAR_LENGTH=33
NOTIFY_BAR_COLOR=#FFFFFF
NOTIFY_BAR_EMPTY_COLOR=#404040

NOTIFY_ICON_DEFAULT=default
NOTIFY_ICON_DIRECTORY=/home/user/images/icon/notify

NOTIFY_TIMEOUT_LOW=1200
NOTIFY_TIMEOUT_NORMAL=2500
NOTIFY_TIMEOUT_CRITICAL=3500

NOTIFY_URGENCY_DEFAULT=normal

NOTIFIER_PROCESS=dunst
NOTIFIER_EXECUTE=dunst

function create_bar() {

	local percentage=$1

	# if percentage is valid
	if [ -n "$percentage" ] && [[ $percentage =~ ^[+-]?[0-9]+$ ]] && [ $percentage -ge 0 ] && [ $percentage -le 100 ]; then

		# calculate bar lengths
		local bar_length=$(bc <<< "("$percentage" * "$NOTIFY_BAR_LENGTH") / 100")
		local bar_empty_length=$(bc <<< "("$NOTIFY_BAR_LENGTH" - "$bar_length")")

		# if bar_length rounded down to zero but percentge is not zero then increase bar_length to 1
		if [ $bar_length -eq 0 ] && [ $percentage -gt 0 ]; then
			bar_length=1
		fi

		# if bar_length is greater than zero then create bar_string
		if [ $bar_length -gt 0 ]; then
			local bar_string=$(printf "%-${bar_length}s" "$NOTIFY_BAR_CHAR")
		fi

		# if bar_empty_length is greater than zero then create bar_empty_string
		if [ $bar_empty_length -gt 0 ]; then
			local bar_empty_string=$(printf "%-${bar_empty_length}s" "$NOTIFY_BAR_CHAR")
		fi

		# echo bar string
		echo "<span foreground='$NOTIFY_BAR_COLOR'>${bar_string// /$NOTIFY_BAR_CHAR}</span><span foreground='$NOTIFY_BAR_EMPTY_COLOR'>${bar_empty_string// /$NOTIFY_BAR_CHAR}</span>"

	fi

}

# if notifier is not running then launch it
if [ -z "$(pgrep -x $NOTIFIER_PROCESS)" ]; then
	eval $NOTIFIER_EXECUTE &
fi

appname=$1
icon=$2
urgency=$3
timeout=$4
summary=$5
content=$6

# if image file matching icon is not found, look for alternate image
if [ ! -f "$NOTIFY_ICON_DIRECTORY/$icon.png" ] && [ ! -f "$NOTIFY_ICON_DIRECTORY/$icon.svg" ] && [ ! -f "$icon" ]; then
	# if image file matching appname is found, use file for icon
	if [ -f "$NOTIFY_ICON_DIRECTORY/$appname.png" ] || [ -f "$NOTIFY_ICON_DIRECTORY/$appname.svg" ]; then
		icon=$appname
	# else use default icon image
	else
		icon=$NOTIFY_ICON_DEFAULT
	fi
fi

# if urgency is not valid then set urgency to normal
if [ $urgency != "low" ] && [ $urgency != "normal" ] && [ $urgency != "critical" ]; then
	urgency=$NOTIFY_URGENCY_DEFAULT
fi

# if timeout is not a valid integer then use a default value
if ! [[ $timeout =~ ^[+-]?[0-9]+$ ]]; then
	if [ "$urgency" = "low" ]; then
		timeout=$NOTIFY_TIMEOUT_LOW
	elif [ "$urgency" = "normal" ]; then
		timeout=$NOTIFY_TIMEOUT_NORMAL
	elif [ "$urgency" = "critical" ]; then
		timeout=$NOTIFY_TIMEOUT_CRITICAL
	else
		timeout=$NOTIFY_TIMEOUT_NORMAL
	fi
fi

# if bar string is found then replace it with a bar
if [[ "$content" =~ __[0-9]{1,3}__ ]]; then
	content=$(sed "s|__[0-9]\+__|$(create_bar $(grep -oP "__[0-9]{1,3}__" <<< $content | tr -d "__"))|g" <<< $content)
fi

content=$(sed "s|__DIM__|<span foreground='#AAAAAA'>|g; \
	s|__ERROR__|<span foreground='#FF7777'>|g; \
	s|__HIGH__|<span foreground='#FF7777'>|g; \
	s|__HIGHLIGHT__|<span foreground='#FFFF77'>|g; \
	s|__LOW__|<span foreground='#FF7777'>|g; \
	s|__MEDIUM__|<span foreground='#FFFF77'>|g; \
	s|__MUTE__|<span foreground='#FF7777'>|g; \
	s|__OFF__|<span foreground='#FF7777'>|g; \
	s|__ON__|<span foreground='#77FF77'>|g; \
	s|__VALUE__|<span foreground='#FFFF77'>|g; \
	s|__WARNING__|<span foreground='#FF7777'>|g; \
	s|__END__|</span>|g" <<< $content)

# send notification
sudo -u $NOTIFY_USER DISPLAY=$DISPLAY DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS \
	notify-send -a "$appname" -i "$icon" -u "$urgency" -t "$timeout" "$summary" "<b>$content</b>"
