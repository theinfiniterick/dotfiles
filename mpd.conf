
# directories
music_directory		                "~/music"
playlist_directory	                "~/.config/mpd/playlists"
db_file	    		                "~/.config/mpd/database"
log_file			                "~/.config/mpd/log"
pid_file			                "~/.config/mpd/pid"
state_file			                "~/.config/mpd/state"
sticker_file		                "~/.config/mpd/sticker.sql"

# general music daemon options
user				                "user"
group				                "wheel"
bind_to_address		                "127.0.0.1"
bind_to_address		                "~/.config/mpd/socket"
port                                "6600"
log_level                           "default"
restore_paused                      "yes"
save_absolute_paths_in_playlists	"no"
metadata_to_use                     "artist,album,title,track,name,genre,date,composer,performer,disc"
#metadata_to_use                    "+comment"
auto_update	                        "yes"
#auto_update_depth                  "3"

# symbolic link behavior
#follow_outside_symlinks	"no"
follow_inside_symlinks		"yes"

# zeroconf / Avahi Service Discovery
#zeroconf_enabled		"yes"
#zeroconf_name			"Music Player @ %h"

# permissions
#password                        "password@read,add,control,admin"
#default_permissions             "read,add,control,admin"

# database
#database {
#       plugin "proxy"
#       host "other.mpd.host"
#       port "6600"
#}

# input
input {
        plugin "curl"
#       proxy "proxy.isp.com:8080"
#       proxy_user "user"
#       proxy_password "password"
}

# audio output
audio_output {
    type            "alsa"
    name            "Alsa (Stereo)"
    mixer_type      "software"     		    # Optional
}
audio_output {
	type			"alsa"
	name			"Alsa (Hardware)"
	device  		"hw:0,0"				# Optional
	mixer_type      "hardware"				# Optional
	mixer_device	"default"				# Optional
	mixer_control	"PCM"					# Optional
	mixer_index	    "0"						# Optional
}
audio_output {
     type           "pulse"
     name           "Pulseaudio"
     device         "pulse"
     mixer_type     "hardware"
}
audio_output {
    type             "fifo"
    name             "Fifo (Stereo)"
    path             "/tmp/mpd.fifo"
    format           "44100:16:2"
}
audio_output {
    type            "fifo"
    name            "Fifo (Mono)"
    path            "/tmp/mpd.fifo"
    format          "44100:16:1"
}
# An example of an OSS output:
#
#audio_output {
#	type			"oss"
#	name			"My OSS Device"
#	device			"/dev/dsp"				# Optional
#	mixer_type      "hardware"				# Optional
#	mixer_device	"/dev/mixer"			# Optional
#	mixer_control	"PCM"					# Optional
#}
# An example of a shout output (for streaming to Icecast):
#
#audio_output {
#	type			"shout"
#	encoder			"vorbis"				# Optional
#	name			"My Shout Stream"
#	host			"localhost"
#	port			"8000"
#	mount			"/mpd.ogg"
#	password		"hackme"
#	quality			"5.0"
#	bitrate			"128"
#	format			"44100:16:1"
#	protocol		"icecast2"				# Optional
#	user			"source"				# Optional
#	description		"My Stream Description"	# Optional
#	url				"http://example.com"	# Pptional
#	genre			"jazz"					# Pptional
#	public			"no"					# Pptional
#	timeout			"2"						# Pptional
#	mixer_type      "software"				# Pptional
#}
# An example of a recorder output:
#
#audio_output {
#	type		"recorder"
#	name		"My recorder"
#	encoder		"vorbis"					# Optional, vorbis or lame
#	path		"/var/lib/mpd/recorder/mpd.ogg"
#	quality		"5.0"						# Do not define if bitrate is defined
#	bitrate		"128"						# Do not define if quality is defined
#	format		"44100:16:1"
#}
# An example of a httpd output (built-in HTTP streaming server):
#
#audio_output {
#	type		"httpd"
#	name		"My HTTP Stream"
#	encoder		"vorbis"					# Optional, vorbis or lame
#	port		"8000"
#	bind_to_address	"0.0.0.0"				# Optional, IPv4 or IPv6
#	quality		"5.0"						# Do not define if bitrate is defined
#	bitrate		"128"						# Do not define if quality is defined
#	format		"44100:16:1"
#	max_clients	"0"							# Optional 0=no limit
#}
# An example of a pulseaudio output (streaming to a remote pulseaudio server)
#
#audio_output {
#	type		"pulse"
#	name		"My Pulse Output"
#	server		"remote_server"		        # Optional
#	sink		"remote_server_sink"	    # Optional
#}
# An example of a winmm output (Windows multimedia API).
#
#audio_output {
#	type		"winmm"
#	name		"My WinMM output"
#	device		"Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#		or
#	device		"0"		# optional
#	mixer_type	"hardware"	# optional
#}
# An example of an openal output.
#
#audio_output {
#	type		"openal"
#	name		"My OpenAL output"
#	device		"Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#}
# An example of an sndio output.
#
#audio_output {
#	type		"sndio"
#	name		"sndio output"
#	mixer_type	"hardware"
#}
# An example of an OS X output:
#
#audio_output {
#	type		"osx"
#	name		"My OS X Device"
#	device		"Built-in Output"	# optional
#	channel_map      "-1,-1,0,1"	# optional
#}
## Example "pipe" output:
#
#audio_output {
#	type		"pipe"
#	name		"my pipe"
#	command		"aplay -f cd 2>/dev/null"
# Or if you're want to use AudioCompress
#	command		"AudioCompress -m | aplay -f cd 2>/dev/null"
# Or to send raw PCM stream through PCM:
#	command		"nc example.org 8765"
#	format		"44100:16:2"
#}
## An example of a null output (for no audio output):
#
#audio_output {
#	type		"null"
#	name		"My Null Output"
#	mixer_type      "none"			# optional
#}

# normalization automatic volume adjustments
#replaygain			"album"
#replaygain_preamp		"0"
#replaygain_missing_preamp	"0"
#replaygain_limit		"yes"
#volume_normalization		"no"

# character encoding
filesystem_charset		"UTF-8"
